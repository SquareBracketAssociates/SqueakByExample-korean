'From Squeak3.9gamma of ''23 July 2006'' [latest update: #7061] on 11 November 2006 at 8:55:38 pm'!Morph subclass: #PyramidMorph	instanceVariableNames: 'base inputs'	classVariableNames: ''	poolDictionaries: ''	category: 'LesMorph'!!PyramidMorph commentStamp: 'HilaireFernandes 9/8/2006 12:36' prior: 0!Un morph pour représenter une pyramide de nombre, pour y faire des jeux additifs et aures- base représente la quantité de nombre dans la base- inputs est une liste  champ de saisie morphic correspondant aux différentes pierre de la pyramide:    | 6 |  | 4 | 5 || 1 | 2 | 3 |!!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/5/2006 18:01'!base	^base! !!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/5/2006 17:35'!base: aNumber	base := aNumber.	self buildPyramid! !!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/5/2006 17:48'!block: anInteger	^ (inputs at: anInteger) contents asString asInteger! !!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/5/2006 17:50'!block: anInteger value: aNumber	(inputs at: anInteger) contents: aNumber asString asText! !!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/7/2006 11:55'!blocks"return dans une liste de listes les valeurs de la pyramide"|blocks row position|	blocks := OrderedCollection new.	row := base.	position := 1.	base timesRepeat: [ |rowCollection|		rowCollection := OrderedCollection new.		blocks add: rowCollection.		row timesRepeat: [			rowCollection add: (self block: position).			position := position + 1].		row := row - 1].	^blocks! !!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/8/2006 16:02'!cell: anInteger color: aColor	(inputs at: anInteger) backgroundColor: aColor! !!PyramidMorph methodsFor: 'accessing' stamp: 'HilaireFernandes 9/8/2006 15:35'!inputs	^inputs! !!PyramidMorph methodsFor: 'private' stamp: 'HilaireFernandes 11/11/2006 20:54'!buildPyramid	| startPosition row refInput input |	row := base.	inputs		ifNotNil: [self removeAllMorphs].	inputs := OrderedCollection new.	refInput := TextMorph new extent: 30 @ 30;				 borderWidth: 1;				 backgroundColor: Color yellow;				 contents: ''.	startPosition := self topLeft + (0 @ (refInput height - 1) * (base - 1)).	base		timesRepeat: [| position | 			position := startPosition.			row				timesRepeat: [input := refInput copy position: position.					self addMorph: input.					inputs add: input.					position := position + (input width - 1 @ 0)].			row := row - 1.			startPosition := startPosition + (input width / 2 @ (input height negated + 1))].	self extent: self fullBounds extent.	inputs		from: 1		to: base		do: [:anInputMorph | anInputMorph lock]! !!PyramidMorph methodsFor: 'geometry' stamp: 'HilaireFernandes 9/3/2006 09:10'!extent: aPoint	super extent: self fullBounds extent! !!PyramidMorph methodsFor: 'initialization' stamp: 'HilaireFernandes 9/5/2006 11:03'!initialize	super initialize.	self color: Color transparent! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PyramidMorph class	instanceVariableNames: ''!!PyramidMorph class methodsFor: 'instance creation' stamp: 'HilaireFernandes 9/5/2006 17:36'!base: aNumber	^self new base: aNumber ! !